1、redis的过期淘汰策略和过期删除机制
      a、淘汰策略有几种：从过期键中删除，从过期键中随机删除，随机删除，
	从过期键中找到最近最少使用的键值删除；删除最近最少使用的键值；不删除数据；

       b、删除机制：立即删除；惰性删除；定时删除；

2、mysql 有2000万数据，redis有20万数据，如何保证redis都是热数据？
      ：计算20万数据大概占用多少内存，然后设置redis的最大内存，根据redis的淘汰策略（
	最近最少使用的淘汰），只保留最常使用的数据。

3、redis内存用完了会怎么样？
     ：会触发淘汰策略，根据设置的策略有不同的反应；一般会淘汰过期键。如果不淘汰，新增则会报错。

4、redis如何做内存优化？
      ：使用合适的数据结构；合理设置过期时间；避免大对象； 

5、redis的线程模型？
     ：redis开发了一个文件事件处理器，该处理器是个单线程的处理器，采用IO多路复用大大提高了效率；
	io多路复用是什么意思呢？意思是用单个线程监听多个socket，把监听到的时间存放在队列中；
	事件处理器主要是分为三种：读，写，链接

6、为什么单线程的redis效率也能这么高？
	IO多路复用虽然单线程，但是不处理事件；事件处理器是纯内存操作；单线程避免了多线程的上下文切换。


7、redis事务的三个阶段
	事务开启命令：multi, exec; discard（中断关闭事务）
	三个阶段：开启事务；命令入队；执行事务

8、redis事务支持隔离性吗？事务保证原子性吗？支持回滚吗？
	redis三个特性：单独隔离性（序列化单独执行）；没有隔离级别概念；单条命令是原子性的，
	但是事务不保证原子性；没有回滚。

9、redis哈希槽概念
	redis实际存放数据就是用slot存放的，redis一共有16384个哈希槽。通过crc16算法，均匀分到每个节点上；
	因此redis最大集群数量为16384。没有一致性hash算法，所以才引入的hash槽。

10、redis为什么要分区呢？
	如果要提高多核CPU的利用率，可以在同一台服务器上部署多台redis实例即可。






	
	


